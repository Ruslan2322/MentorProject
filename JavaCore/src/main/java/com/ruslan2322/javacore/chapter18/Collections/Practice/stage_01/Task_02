package main.java.com.ruslan2322.javacore.chapter18.Collections.Practice.stage_01;

import java.util.Arrays;

/** Задание 2
 * Дан массив целых чисел.
 * Необходимо реализовать метод, которые определяет, содержит ли данный массив дубликаты
 * Пример:
 * Array: [4,5,6,6,8]
 * Result: true
 * Число 6 повторяется 2 раза
 * Array: [4,5,6,7,8]
 * Result: false
 * Дубликатов нет
 */


public class Task_02 {
    public static void main(String[] args) {

        int array[] = new int[]{4,5,6,7,3,8,7};
        int array2[] = new int[]{3,4,5,6,7,8,9};

        // Сортируем массивы
        sorting(array);
        sorting(array2);

        // Проверяем
        proverka(array);
        proverka(array2);

    }


    // Простейший метод на проверку элементом массива  // Но, в нём есть недостаток, можно посчитать дубликаты только
    // первой парной цифры, допустим в массиве [3,3,4,4] мы получим подсчет только цифр 3
    public static void proverka(int... array) {
        int count = 1;
        int T = 0;
        int C = 0;

            for (int i = 0; i < array.length - 1; i++) {
                if (array[i] == array[i + 1]) {
                    count++;
                    T = array[i];
                }
            }
        if (count >= 2)
            System.out.println("Массив: "+ Arrays.toString(array)+
                    "\n"+ "Result: " + true + "\n" + "Число " + T + " повторяется " + count + " раз");

        if (count == 1)
                System.out.println("Массив: "+ Arrays.toString(array)+
                        "\n" + "Result: " + false + "\n" + "Дубликатов нет");
        }


    // Самая простая сортировка пузырьком
    public static void sorting(int... array) {
        boolean isSorted = false;
        int buf;
        while (!isSorted) {
            isSorted = true;
            for (int i = 0; i < array.length - 1; i++) {
                if (array[i] > array[i + 1]) {
                    isSorted = false;

                    buf = array[i];
                    array[i] = array[i + 1];
                    array[i + 1] = buf;
                }
            }
        }
    }
}
